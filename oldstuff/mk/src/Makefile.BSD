#! /usr/bin/make -f
# 4.4BSD UNIX makefile for epspline

RM   =  rm
CP   =  cp
MKDEP=  mkdep
# On BSD the system lex and yacc should work; flex
# is N.G. if it is the new flex (core dump or infinite loop)
YACC =  yacc
#YACC =  byacc
#YACC =  bison -y
LEX  =  lex
#LEX  =  flex -l
#LEX  =  flex
CCLEX=  c++
#CCLEX=  cc
LEX_STEM = lex.yy
#PICFLAGS = -fPIC

CFLAGS = $(CCFLAGS)

CF ?= wx-config

FINAL ?= 1

.ifndef EXESUFFIX
.if $(FINAL) == 0
EXESUFFIX=_dbg
.else
EXESUFFIX=
.endif
.endif

#OBJDIR = objects$(EXESUFFIX)
OBJDIR = .
SRCDIR = .
HDRDIR = .
COMMDIR = .

.include "objects.mak"

all: $(OBJDIR) epspline$(EXESUFFIX)

$(APPLIB) applib:
	true

$(OBJDIR):
	test -d $(OBJDIR) || mkdir $(OBJDIR)

.SUFFIXES: .cpp

.cpp.o:
	`$(CF) --cxx` $(CCFLAGS) -c -o $@ $<


$(OBJDIR)/parser.o: $(SRCDIR)/parser.c $(SRCDIR)/lexer.c
	$(CCLEX) -c $(CFLAGS) -I. $(PICFLAGS) -o $@ parser.c

$(SRCDIR)/parser.c: $(COMMDIR)/parser.y $(SRCDIR)/lexer.c
	$(RM) -f y.tab.c
	$(YACC) $(COMMDIR)/parser.y
	sed -e "s;$(COMMDIR)/y.tab.c;parser.y;g" < y.tab.c | \
	sed -e "s/BUFSIZ/5000/g"            | \
	sed -e "s/YYLMAX 200/YYLMAX 5000/g" | \
	sed -e "s/yy/EPSIO_yy/g"            | \
	sed -e "s/input/EPSIO_input/g"      | \
	sed -e "s/unput/EPSIO_unput/g"      > $(SRCDIR)/parser.c

$(SRCDIR)/lexer.c: $(COMMDIR)/lexer.l
	$(RM) -f $(LEX_STEM).c
	$(LEX) $(COMMDIR)/lexer.l
	sed -e "s;$(COMMDIR)/$(LEX_STEM).c;lexer.l;g" < $(LEX_STEM).c | \
	sed -e "s/yy/EPSIO_yy/g"            | \
	sed -e "s/input/EPSIO_input/g"      | \
	sed -e "s/unput/EPSIO_unput/g"      > $(SRCDIR)/lexer.c

epspline$(EXESUFFIX):  $(APPLIB) $(OBJECTS)
	`$(CF) --cxx` $(LDFLAGS) -o $@ $(OBJECTS) $(APPLINK) $(LIBS)

depend dep :
	$(MKDEP) `$(CF) --cflags` $(CCFLAGS) $(SRCS) && $(CP) -f .depend depend

# No capable tools on MSW to make dependency file.  Use Unix tools.
depend.msw dep.msw :
	egrep '(^\$$.+:| \<[^ /]+\.*(h|xpm|inc)\>)' < depend | \
	sed -e 's;^\$$;\?\?&;' \
	-e 's;[ ]/[^ ]\{1,\}\.[^\. /]\{1,\}\>;;g' \
	-e 's;\.o\>;\.obj;g' -e 's;/;\\;g' | tr '?' '\n' > depend.msw
	echo "" >> depend.msw
	echo "" >> depend.msw

# This target written for ``Exuberant Ctags.' [new versions]'
# See http://ctags.sourceforge.net
exuberant-tags : $(SRCS) $(HDRS)
	ctags --c-types=cdefgmnpstuv-x --excmd=pattern *

# This target written for ``Exuberant Ctags.'', old, -p no longer recognized,
# nor --c-types=*+A+C
# See http://ctags.sourceforge.net
old-exuberant-tags : $(SRCS) $(HDRS)
	ctags -p $(SRCDIR) -p $(HDRDIR) --c-types=cdefgmnpstuv-x+A+C \
	--excmd=pattern *

# This target written for BSD ctags
tags : $(SRCS) $(HDRS)
	rm -f tags
	find $(SRCDIR) \( -name \*.cpp -o -name \*.h \) -print | \
		xargs ctags -adtw

# This target written for ``Exuberant Ctags.''
# See http://ctags.sourceforge.net
TAGS : $(SRCS) $(HDRS)
	ctags -e -p $(SRCDIR) -p $(HDRDIR) --c-types=cdefgmnpstuv-x+A+C *

# This target for GNU idutils
ID : $(SRCS) $(HDRS)
	mkid --prune tmp --output=$@

install: epspline$(EXESUFFIX)
	$(INSTALL)  epspline$(EXESUFFIX) $(INSTALLDIR)


clean:
	-$(RM) -f $(OBJDIR)/*.o $(SRCDIR)/lex.yy.c $(SRCDIR)/y.tab.c \
	$(SRCDIR)/parser.c $(SRCDIR)/lexer.c \
	epspline$(EXESUFFIX) *core

cleanall: clean
	-$(RM) -f depend .depend tags TAGS ID
