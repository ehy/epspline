# The freetype headers and dll and a zlib dll can be had in
# binary packages at:
#	http://gnuwin32.sourceforge.net/packages/freetype.htm
# Get the links ``Binaries'' (freetype-bin-zip) and
# ``Dependencies'' (freetype-dep-zip)
#
# unzip freetype-bin-zip, then freetype-dep-zip. With this file
# in the same working directory where the .zips were unzipped,
# and named ``$(PRGNM).cc,'' this should build it:
#	wine dmc -cpp -o+space -mn -Aa -Ab -Ar -Ae -wx -p \
#		-IC:\\dm\\stlport\\stlport \
#		-I.\\include\\freetype2 \
#		-I.\\include \
#		$(PRGNM).cc \
#		.\\lib\\freetype-bcc.lib
#

PRGNM = t1char2pse
OBJDIR = .
SRCDIR = .

SRC = $(PRGNM).cc
DEF = $(PRGNM).def
RC  = $(PRGNM).rc
RES = $(PRGNM).res
BIN = $(PRGNM).exe

#BITS=64
BITS=32
MGPFX=i686
#MGPFX=x86_64

FTPATH=/home/evh/build-local/freetype/MSW/install-$(BITS)

INCLUDES = -I$(FTPATH)/include/freetype2 -I./include

LDFLAGS = -L$(FTPATH)/lib
LIBS = -lfreetype

CXX = $(MGPFX)-w64-mingw32-c++

CXXFLAGS = -Os -static -mconsole $(INCLUDES)
#CXXFLAGS = -Os -static -mconsole $(INCLUDES) -DFMT_HIGHPREC=13

all: $(BIN)

$(BIN): $(PRGNM).o $(RES)
	$(CXX) $(CXXFLAGS) -o $@ $(PRGNM).o $(LDFLAGS) $(LIBS) $(RES)

# make MSW resource binary -- note the attempt to find the resource
# compiler if $(MSWRCC) is empty assumes tool name pattern of
# typical mingw installations
$(RES): $(RC)
	@RCC="$(MSWRCC)"; RC="$(RC)"; \
	if test X"$$RCC" = X ; then \
		{ C="$(CXX)"; RCC="$${C%-*}-windres"; \
		type "$$RCC" || { echo FAILED trying \"$$RCC\"; exit 1; } ; \
		} ; \
		echo "$$RCC" --output-format=coff -I . $$RC $@ ; \
		"$$RCC" --output-format=coff -I . $$RC $@ ; \
	else \
		echo $(MSWRCC) --output-format=coff -I . $$RC $@ ; \
		$(MSWRCC) --output-format=coff -I . $$RC $@ ; \
	fi
	@echo Succeeded compiling MSW binary resource $@

clean:
	rm -f core *.core *.o $(BIN) $(RES)

