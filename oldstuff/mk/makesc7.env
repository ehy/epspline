# Common settings for Symantec 7.[25]

!ifndef WXWIN
WXWIN=C:\wxWindows.2.2\wx2
!endif

WXVERSION=22_0

WXDIR = $(WXWIN)
INCDIR = $(WXDIR)\include
LIBDIR = $(WXDIR)\lib

SRCD=$(WXDIR)\src

SRCSUFF = cpp
OBJSUFF = obj

INCLUDE=$(INCDIR)
SCINCL=C:\sc\include

# These are for a popen()/pclose() hack, as SC's library lacks them.
# see src/msw/pipew32.c
SCXDEF=-D_popen=popen -D__popen=popen -D_pclose=pclose -D__pclose=pclose
SCRTLINC=C:\sc\src\include  # C library internal headers, for popen() etc..


DEFFILE=sc32.def

# default values

CC=sc
LINKER = link
#LINKER = link721
RC=rcc


#####################################################################
# These are the possible DLL/non-DLL usages:
#
# Type             	_DLL/_WINDLL WXUSINGDLL  WXMAKINGDLL  Library
#--------------------------------------------------------------------
# Normal application    -            -           -            wx.lib
#
# wxWin as DLL          Defined      -           Defined      wx$(WXVERSION).lib
#
# App using wxWin DLL   -            Defined     -            wx$(WXVERSION).lib
#
# App built as one DLL  Defined      -           -            wx.lib
#
######################################################################
#
# Compiling your app:
#--------------------
# when compiling an app to use the DLL version of wxWindows
# (but not to be a DLL itself), set WXUSINGDLL to 1 in your
# makefile just before including ntwxwin.mak.
# To compile wxWin _and_ app itself as a DLL, set DLL to 1
# in ntwxwin.mak, and do not set WXUSINGDLL.
#
# Compiling wxWindows:
#---------------------
# Use the dll target to compile wxWindows as DLL; then make 'pch'
# to generate a precompiled header for your apps to use. BUG: must compile without
# wxExpr (USE_WX_RESOURCES = 0) for this to link properly. Don't know why yet.
# Use the dllapp target to compile wxWindows for making a DLL app (not implemented yet)

#DLL=0

!if "$(WXUSINGDLL)" == "1"
EXTRADLLFLAGS=-DWXUSINGDLL=1
!endif

!if "$(WXMAKINGDLL)" == "1"
EXTRADLLFLAGS=-DWXMAKINGDLL=1
!endif

!if "$(WXMAKINGDLL)" == "0" && "$(DLL)" == "1"
EXTRADLLFLAGS=
!endif

!if "$(NOMAIN)" == "1"
EXTRADLLFLAGS=$(EXTRADLLFLAGS) -DNOMAIN
!endif

!ifndef FINAL
FINAL=0
!endif
!if $(FINAL)
DEBUG=0
!else
DEBUG=1
!endif

!ifndef DLL
DLL=0
!endif

# This sets 'D' to a suitable directory name
# for this kind of build, and WXLIBNAME to one of wx (static release), wxd (static debug),
# wx$(WXVERSION) (DLL release), wx$(WXVERSION)d (DLL debug)

!if "$(WXMAKINGDLL)" == "1" || "$(WXUSINGDLL)" == "1"
WXLIBNAME=wx$(WXVERSION)
!else
WXLIBNAME=wx
!endif

!if "$(NEW_WXLIBNAME)" != ""
WXLIBNAME=$(NEW_WXLIBNAME)
!endif

WXLIBNAME2=$(WXLIBNAME)aux

!if "$(FINAL)" == "1"
D=Release
!else
D=Debug
LIBEXT=d
WXLIBNAME=$(WXLIBNAME)$(LIBEXT)
WXLIBNAME2=$(WXLIBNAME2)$(LIBEXT)
!endif

!if "$(WXMAKINGDLL)" == "1" || "$(WXUSINGDLL)" == "1"
WXLIB2=$(WXDIR)\lib\$(WXLIBNAME2).lib
D=$(D)DLL
!endif

WXLIB=$(WXDIR)\lib\$(WXLIBNAME).lib


# Sorry no 16 bit stuff. EH
# WIN16 settings
#CFLAGS = -Jm -ml -W -D__WXMSW__ -D__SC__ -D__WXDEBUG__ -D__WINDOWS__ -D__WIN16__ $(EXTRACPPFLAGS)
#LINKER = link
#LDFLAGS = -ml -W -L$(LINKER).exe $(EXTRALDFLAGS)
#LIBS=$(WXLIB) $(EXTRALIBS) libw.lib commdlg.lib ddeml.lib shell.lib # $(LIB)\ctl3dv2.lib
#DEFFILE=sc16.def

# WIN32 settings
!if $(DEBUG) == 0
# Without -g even in optimized build, can't handle templates.
# -o-cnp for constant propagation optimizer bug present in 7.[56]
CFLAGS = -o+space -o-cnp -ff -g -5 -mn -Aa -Ab -p -XD -Nc \
         -D__NT__ -DWIN32 -D__WIN32__ \
         -D__WINDOWS__ -D__WXMSW__ $(EXTRADLLFLAGS)
LFLAGS=/DE/NODEBUG/PACKF
!else
CFLAGS = -mn -Aa -Ab -p -D -gf -g4 -D -XD -D__NT__ -DWIN32 -D__WIN32__ \
         -D__WINDOWS__ -D__WXMSW__ -D__WXDEBUG__ $(EXTRADLLFLAGS)
LFLAGS=/DE/DEBUG/CO
!endif

!if "$(WXMAKINGDLL)" == "1"
LFLAGS=$(LFLAGS)/IMPLIB:$(WXLIB)/PAGESIZE:512/NOX/DO/BYO/XN/IMPD
LFLAGS2=$(LFLAGS)/IMPLIB:$(WXLIB2)/PAGESIZE:512/NOX/DO/BYO/XN/IMPD
#LFLAGS=$(LFLAGS)/IMPLIB:$(WXLIB)/PAGESIZE:512/ENTRY:_DllEntryPoint@12/BAS:268435456/L/M:GROUP/X/DO/BYO/XN/IMPD
#LFLAGS2=$(LFLAGS)/IMPLIB:$(WXLIB2)/PAGESIZE:512/ENTRY:_DllEntryPoint@12/BAS:268435456/L/M:GROUP/X/DO/BYO/XN/IMPD
CFLAGS=$(CFLAGS) -WD -ND
!else
CFLAGS=$(CFLAGS) -WA
!endif
LFLAGS=$(LFLAGS)/A:512/NT/NOI
LFLAGS2=$(LFLAGS2)/A:512/NT/NOI

LDFLAGS=-L$(LFLAGS)
LDFLAGS2=-L$(LFLAGS2)

LIBS0=shell32.lib comdlg32.lib comctl32.lib \
       comdlg32.lib advapi32.lib wsock32.lib ole32.lib oleaut32.lib \
       uuid.lib uuid2.lib uuid3.lib user32.lib gdi32.lib kernel32.lib
LIBS1=winspool.lib winmm.lib ctl3d32.lib odbc32.lib rpcrt4.lib \
      opengl32.lib glu32.lib glaux.lib
LIBSMKDLL= $(LIBS0) $(LIBS1)
LIBS=$(WXLIB) $(WXLIB2) $(EXTRALIBS) $(LIBS0) $(LIBS1)

CCINC=-I$(INCLUDE) -I$(SCINCL) -I$(SRCD)\zlib -I$(SRCD)\jpeg \
      -I$(SRCD)\png -I$(SRCD)\tiff -I$(SRCD)\xpm
CINC= -I$(INCLUDE) -I$(SCINCL) -I$(SCRTLINC) -I$(SRCD)\zlib \
      -I$(SRCD)\jpeg -I$(SRCD)\png -I$(SRCD)\tiff -I$(SRCD)\xpm

.cpp.obj :
    *$(CC) -c $(CFLAGS) $(CCINC) $(OPTIONS) $< -o$@

.c.obj :
    *$(CC) -c $(CFLAGS) $(SCXDEF) $(CINC) $(OPTIONS) -DUSE_DEFINE -Jm $< -o$@

.rc.res :
    *$(RC) -32 -I$(INCLUDE) -I$(SCINCL) $< -o$@


